#!/usr/bin/perl -w
use strict;
use warnings;

=head1 NAME

krang_farm_build - create builds on the krang farm

=head1 SYNOPSIS

Create a build of Krang v1.018 on each farm machine:

  $ krang_farm_build krang-1.018-src.tar.gz

Create a build of Krang v1.018 on just the Redhat7_3 machine:

  $ krang_farm_build --machine Redhat7_3 krang-1.018-src.tar.gz

=head1 LOGGING

This script will write to a log for each machine called
'build.$NAME.log' in the log/ directory.

=head1 OPTIONS

=over

=item --machine

Specify a particular machine to build against.  Otherwise the build
will run against all machines.

=back

=cut

use File::Spec::Functions qw(catdir catfile splitdir rel2abs);
use FindBin qw($RealBin);

BEGIN {
    # Find a KRANGFARM_ROOT based on path to bin
    my @dir = splitdir($RealBin);
    $ENV{KRANGFARM_ROOT} ||= catdir(@dir[0 .. $#dir - 1]);

    # use $KRANGFARM_ROOT/lib for modules
    my $lib    = catdir($ENV{KRANGFARM_ROOT}, "lib");
    $ENV{PERL5LIB} = $ENV{PERL5LIB} ? "$ENV{PERL5LIB}:${lib}" : 
      "${lib}";
    unshift @INC, $lib;

    # load KrangFarm::Conf
    eval { require KrangFarm::Conf };
    warn << "END" and exit(1) if $@;
######################################################################

Cannot load KrangFarm::Conf.

Error message:

$@

######################################################################
END
}

use KrangFarm::Conf;
use KrangFarm::Control;

# process options
use Getopt::Long;
use Pod::Usage;

my ($help, $man, @machines, $src, @machine_names);
pod2usage(2) unless
  GetOptions(help       => \$help,
             man        => \$man,
             'machine=s' => \@machine_names,
            );
pod2usage(1)             if $help;
pod2usage(-verbose => 2) if $man;

# get input source file
$src = shift(@ARGV);
pod2usage("Missing source filename command-line parameter!\n")
  unless $src;

# validate filename
die "Specified file '$src' does not exist.\n" unless -e $src;

# make sure that's it
pod2usage("Unrecognized options to krang_farm_build: '" 
          . join(' ', @ARGV) . "'\n")
  if @ARGV;

# resolve machines list
if (@machine_names) {
    my @all = KrangFarm::Conf->machines;
    foreach my $name (@machine_names) {
        my ($machine) = grep { $_->{name} eq $name } @all;
        die "Machine named '$name' not found in farm.conf!\n" 
          unless $machine;
        push(@machines, $machine);
    }                
} else {
    @machines = KrangFarm::Conf->machines;
}

# run over list of machines starting them up and running a build
foreach my $machine (@machines) {
    print "\n" . "*"x50 . "\nBuilding on $machine->{name} ".
      "($machine->{description})\n";
    my $logfile = catfile($ENV{KRANGFARM_ROOT}, 'log', 
                          "build.$machine->{name}.log");
    print "   Logging to $logfile\n";
    open(my $log, '>>', $logfile) or die "Unable to open '$logfile': $!";
    my $old = select($log);
    $|++;
    select($old);

    KrangFarm::Control->start(machine => $machine,
                              log     => $log);

    KrangFarm::Control->stop(machine => $machine,
                             log     => $log);

    close $log;
}

